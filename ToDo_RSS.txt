http://www.v-gn.de/wbb/thread.php?postid=132065#post132065


Editiere die Datei "em2016.php".

suche

$count = "0";
$newsem2016total = "";
$feedurl = "http://de.fifa.com/worldcup/news/rss.xml";
if ($em2016_options['showrssnews_method'] == "0") {
    $data = file_get_contents($feedurl);
} else {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $feedurl);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $data = curl_exec($ch);
    curl_close($ch);
}
preg_match_all("/<item>(.+)<\/item>/sU", $data, $items);		
//preg_match_all("/<link>(.+)<\/link>/sU", $data, $items);
foreach ($items[0] as $item) {
    $count++;
    if ($count <= $em2016_options['rssnews']) {
        preg_match("/<title>(.+)<\/title>/U", $item, $title);
        preg_match("/<link>(.+)<\/link>/sU", $item, $link);
        $link1 = 'http://de.fifa.com'.$link[1];
        // $link1 = substr("$link1", 9);
        // $link1 = substr("$link1", 0, - 3);
        $title1 = $title[1];
        $title1 = substr("$title1", 9);
        $title1 = substr("$title1", 0, - 3);
        $title1 = utf8_decode("$title1");
        $title2 = $title1;
        if (strlen($title1) > 50) {
            $title1 = substr($title1, 0, 50) . "...";
        }

        $newsem2016total .= "&raquo; <a href="{$link1}" target="_blank" title="{$title2}">{$title1}</a><br />";
    }
}



ersetze mit


   $count = "0";
                $newsem2016total = "";
                // Einbinden der Datei //
		require_once 'RSSImport.class.php';
		// Feed importieren, hier kannst Du auch eine URL angeben //
		$feed = new RSSImport('http://de.uefa.com/rssfeed/news/rss.xml');
		if ($feed) {
			
			// Inhalte anzeigen //
			$items = $feed -> getItems();
			foreach ($items AS $item) {
				$count++;
				if ($count <= $em2016_options['rssnews']) {
					$newsem2016total .= "&raquo; <a href="{$item['link']}" target="_blank" title="">".utf8_decode($item['title'])."</a><br />";
				}
			}
		}




		----



		<?php
		/*
		 * FeedImport: Importiere RSS 2.0-Feeds und gib die Inhalte aus
		 * Quelle: http:/www-coding.de/rss-feed-import-mit-php/
		 * (hier findest du auch Beispiele und Erläuterungen)
		 *
		 * BEISPIEL
		 * siehe rss_example.php
		 */

		class RSSImport {
			private $__feedInfo = array(), $feedItems = array();

			// Konstruktor: Verarbeitung des Feeds aus $feedUrl //
			public function __construct($feedUrl) {
				$xml = simplexml_load_file($feedUrl, 'SimpleXMLElement', LIBXML_NOCDATA);

				if (!$xml) {
					// Fehler: Es handelt es sich um kein gültiges XML-Dokument //
					return false;
				} else {
					// Feed-Informationen speichern //
					$this->feedInfo['title'] = $xml->channel->title[0];
					$this->feedInfo['link'] = $xml->channel->link[0];

					if (isset($xml->channel->description)) {
						$this->feedInfo['description'] = $xml->channel->description[0];
					}

					if (isset($xml->channel->lastBuildDate)) {
						$this->feedInfo['updated'] = $xml->channel->lastBuildDate[0];
					}

					// Einträge speichern //
					$this->saveItems($xml);
				}
			}

			// Liefert die Feed-Informationen für ein Element, z.B. 'title' oder für alle (false) aus //
			public function getFeedInfo($element = false) {
				if ($element && isset($this->feedInfo[$element])) {
					// Einzelnes Element zurückgeben //
					return $this->feedInfo[$element];
				} elseif (!$element) {
					// Komplettes Array zurückgeben //
					return $this->feedInfo;
				}

				// Keine Ausgabe -> Fehler //
				return false;
			}

			// Liefert die Informationen als Array für einen Eintrag mit der ID $id oder für alle (false) //
			public function getItems($id = false) {
				if ($id && isset($this->feedItems)) {
					// Informationen für einen Eintrag //
					return $this->feedItems[$id];
				} elseif (!$id) {
					// Informationen für alle Einträge //
					return $this->feedItems;
				}

				// Keine Ausgabe -> Fehler //
				return false;
			}

			// Speichern der einzelnen RSS-Einträge in $this -> feedItems //
			private function __saveItems($xml) {
				foreach ($xml->channel->item AS $item) {
					// Zeit in einen Timestamp umwandeln //
					$itemDate = DateTime::createFromFormat('D, d M Y H:i:s O', $item->pubDate);

					$this->feedItems[] = array(
						'title' => $item->title,
						'link' => $item->link,
						'published' => $itemDate->format('U'),
						'content' => $item->description,
					);
				}
			}
		}
		?>